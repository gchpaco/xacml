%% This BibTeX bibliography file was created using BibDesk.
%% http://www.cs.ucsd.edu/~mmccrack/bibdesk.html


%% Created for Graham Hughes at 2004-03-27 16:09:04 -0800 

@Article{JavaRMI,
  author = 	 {J. Waldo},
  title = 	 {Remote procedure calls and {J}ava {R}emote {M}ethod {I}nvocation},
  journal = 	 {IEEE Concurrency},
  year = 	 {1998},
  OPTkey = 	 {},
  volume = 	 {6},
  number = 	 {3},
  pages = 	 {5--7},
  month = 	 {July--September},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InProceedings{khurshid03generalized,
  author = 	 {S. Khurshid and C. P{\u{a}}s{\u{a}}reanu and W. Visser},
  title = 	 {Generalizd symbolic execution for model checking and testing},
  OPTcrossref =  {},
  OPTkey = 	 {},
  booktitle = {Proceedings of the Ninth International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
  OPTpages = 	 {},
  year = 	 {2003},
  OPTeditor = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  address = 	 {Warsaw, Poland},
  month = 	 {April},
  OPTorganization = {},
  OPTpublisher = {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InProceedings{xie05symstra,
  author = 	 {Tao Xie and Darko Marinov and Wolfram Schulte and
                  David Notkin},
  title = 	 {Symstra: A framework for generating object-oriented
                  unit tests using symbolic execution},
  OPTcrossref =  {},
  OPTkey = 	 {},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems, 11th International Conference, TACAS 2005},
  OPTpages = 	 {},
  year = 	 {2005},
  OPTeditor = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTaddress = 	 {},
  OPTmonth = 	 {},
  OPTorganization = {},
  OPTpublisher = {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@inproceedings{288307,
 author = {Matthew B. Dwyer and Corina S. P{\u{a}}s{\u{a}}reanu},
 title = {Filter-based model checking of partial systems},
 booktitle = {SIGSOFT '98/FSE-6: Proceedings of the 6th ACM SIGSOFT international symposium on Foundations of software engineering},
 year = {1998},
 isbn = {1-58113-108-9},
 pages = {189--202},
 location = {Lake Buena Vista, Florida, United States},
 doi = {http://doi.acm.org/10.1145/288195.288307},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@article{1007526,
 author = {Willem Visser and Corina S. P{\u{a}}s{\u{a}}reanu and
                  Sarfraz Khurshid},
 title = {Test input generation with {J}ava {P}ath{F}inder},
 journal = {SIGSOFT Softw. Eng. Notes},
 volume = {29},
 number = {4},
 year = {2004},
 issn = {0163-5948},
 pages = {97--107},
 doi = {http://doi.acm.org/10.1145/1013886.1007526},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@InBook{mockobjects,
  author = 	 {Andrew Hunt and Dave Thomas},
  title = 	 {Pragmatic Unit Testing in Java with JUnit},
  chapter = 	 {6},
  publisher = 	 {The Pragmatic Programmers},
  year = 	 {2003},
  OPTkey = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTtype = 	 {},
  OPTaddress = 	 {},
  OPTedition = 	 {},
  month = 	 {September},
  OPTpages = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InBook{spin,
  author = 	 {G. Holzmann},
  title = 	 {The Design and Validation of Computer Protocols},
  publisher = 	 {Prentice Hall},
  year = 	 {1991},
  OPTkey = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTtype = 	 {},
  OPTaddress = 	 {},
  OPTedition = 	 {},
  OPTmonth = 	 {},
  OPTpages = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InProceedings{havelund00formal,
  author = 	 {K. Havelund and M. Lowry and S. Park and C. Pecheur
                  and J. Penix and W. Visser and J. White},
  title = 	 {Formal Analysis of the Remote Agent Before and After Flight},
  OPTcrossref =  {},
  OPTkey = 	 {},
  booktitle = {Proceedings of the 5th NASA Langley Formal Methods Workshop},
  OPTpages = 	 {},
  year = 	 {2000},
  OPTeditor = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTaddress = 	 {},
  month = 	 {June},
  OPTorganization = {},
  OPTpublisher = {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InProceedings{visser00java,
  author = 	 {W. Visser and K. Havelund and G. Brat and S. Park},
  title = 	 {Java {P}ath{F}inder---Second Generation of a {J}ava Model Checker},
  OPTcrossref =  {},
  OPTkey = 	 {},
  booktitle = {Proc. of Post-{CAV} Workshop on Advances in Verification},
  OPTpages = 	 {},
  year = 	 {2000},
  OPTeditor = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  address = 	 {Chicago},
  month = 	 {July},
  OPTorganization = {},
  OPTpublisher = {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InProceedings{schaad:lightweight,
  author = 	 {Andreas Schaad and Jonathan Moffet},
  title = 	 {A Lightweight Approach to Specification and Analysis of Role-based Access Control Extensions},
  OPTcrossref =  {},
  OPTkey = 	 {},
  booktitle = {7th ACM Symposium on Access Control Models and Technologies (SACMAT 2002)},
  OPTpages = 	 {},
  year = 	 {2002},
  OPTeditor = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTaddress = 	 {},
  month = 	 {June},
  OPTorganization = {},
  OPTpublisher = {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InProceedings{zao:rbac,
  author = 	 {John Zao and Hoetech Wee and Jonathan Chu and Daniel Jackson},
  title = 	 {{RBAC} Schema Verification Using Lightweight Formal Model and Constraint Analysis},
  OPTcrossref =  {},
  OPTkey = 	 {},
  OPTbooktitle = {},
  OPTpages = 	 {},
  OPTyear = 	 {},
  OPTeditor = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTaddress = 	 {},
  OPTmonth = 	 {},
  OPTorganization = {},
  OPTpublisher = {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InProceedings{brace90efficient,
    author    = { K. Brace and R. Rudell and R. Bryant },
    title     = "Efficient implementation of a {BDD} package",
    booktitle = "Proc. of the 27th {ACM}/{IEEE} {D}esign {A}utomation {C}onf.",
    pages     = {40--45},
    year      = {1990},
}

@InProceedings{LLVM:CGO04,
    author    = {Chris Lattner and Vikram Adve},
    title     = "{LLVM: A Compilation Framework for Lifelong Program Analysis \& Transformation}",
    booktitle = "{Proceedings of the 2004 International Symposium on Code Generation and Optimization (CGO'04)}",
    address   = {Palo Alto, California},
    month     = {Mar},
    year      = {2004}
  }

@inproceedings{sagiv99parametric,
 author = {Mooly Sagiv and Thomas Reps and Reinhard Wilhelm},
 title = {Parametric shape analysis via 3-valued logic},
 booktitle = {Proceedings of the 26th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
 year = {1999},
 isbn = {1-58113-095-3},
 pages = {105--118},
 location = {San Antonio, Texas, United States},
 doi = {http://doi.acm.org/10.1145/292540.292552},
 publisher = {ACM Press},
 }

@inproceedings{ dor00checking,
    author = "Nurit Dor and Michael Rodeh and Shmuel Sagiv",
    title = "Checking Cleanness in Linked Lists",
    booktitle = "Static Analysis Symposium",
    pages = "115--134",
    year = "2000",
    url = "citeseer.ist.psu.edu/dor00checking.html" }

@InProceedings{dor:cleanness,
  author = 	 {Nurit Dor and Michael Rodeh and Shmuel Sagiv},
  title = 	 {Cleanness Checking of String Manipulations in {C} Programs via Integer Analysis},
  keywords = {cstring},
  booktitle = {Proceedings of the 8th International Symposium on Static Analysis},
  pages = 	 {194--212},
  year = 	 {2001},
  month = 	 {July},
  publisher = {Springer-Verlag},
}

@InProceedings{dor:cssv,
  author = 	 {Nurit Dor and Michael Rodeh and Mooly Sagiv},
  title = 	 {{CSSV}: Towards a realistic tool for statically detecting all buffer overflows in {C}},
  keywords = {cstring},
  booktitle = {Proceedings of the ACM SIGPLAN 2003 conference on Programming language design and implementation},
  pages = 	 {155--167},
  year = 	 {2003},
  location =     {San Diego, California, USA},
  publisher = {ACM Press},
}

@techreport{marinov:exhaustive,
	Author = {D. Marinov and A. Andoni and D. Danilinc and S. Khurshid and M. Rinard},
	Institution = {MIT CSAIL},
	Keywords = {xacml},
	Number = {MIT-LCS-TR-921},
	Title = {An Evaluation of Exhaustive Testing for Data Structures},
	Year = {2003}}

@article{bennett:timespace,
	Author = {C. H. Bennett},
	Journal = {SIAM Journal of Computing},
	Keywords = {reversible},
	Number = {1989},
	Pages = {766-776},
	Title = {Time-space tradeoffs for reversible computation},
	Volume = {18},
	Year = {1989}}

@phdthesis{landman:lowpower,
	Author = {P. E. Landman},
	Keywords = {reversible},
	Local-Url = {file://localhost/Users/graham/Desktop/ch2_low_power.pdf},
	Note = {Chapter 2},
	School = {University of California at Berkeley},
	Title = {Low-power architectural design methodologies},
	Year = {1994}}

@article{jackson:elements,
	Author = {Daniel Jackson and C. A. Damon},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {alloy},
	Month = {July},
	Number = {7},
	Title = {Elements of style: Analyzing a software design feature with a counterexample detector},
	Volume = {22},
	Year = {1996}}

@article{margolus:physics,
	Author = {Norman Margolus},
	Journal = {Physica D},
	Keywords = {reversible},
	Pages = {81--95},
	Title = {Physics-like models of computation},
	Volume = {10},
	Year = {1984}}

@inproceedings{jackson:com,
	Address = {San Diego, CA},
	Author = {Daniel Jackson and K. Sullivan},
	Booktitle = {Proceedings of the 8th ACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE)},
	Keywords = {alloy},
	Title = {{COM} revisited: Tool-assisted modeling of an architectural framework},
	Year = {2000}}

@inproceedings{khurshid:exploring,
	Address = {Grenoble, France},
	Author = {S. Khurshid and D. Jackson},
	Booktitle = {Proceedings of the 15th IEEE International Conference on Automated Software Engineering (ASE)},
	Keywords = {alloy},
	Month = {September},
	Title = {Exploring the design of an intentional naming scheme with an automatic constraint analyzer},
	Year = {2000}}

@mastersthesis{ford:packrat,
	Abstract = {Packrat parsing is a novel and practical method for implementing linear-time parsers for grammars defined in Top-Down Parsing Language (TDPL). While TDPL was originally created as a formal model for top-down parsers with backtracking capability, this thesis extends TDPL into a powerful general-purpose notation for describing language syntax, providing a compelling alternative to traditional context-free grammars (CFGs). Common syntactic idioms that cannot be represented concisely in a CFG are easily expressed in TDPL, such as longest-match disambiguation and 'syntactic predicates' making it possible to describe the complete lexical and grammatical syntax of a practical programming language in a single TDPL grammar. Packrat parsing is an adaptation of a 30-year-old tabular parsing algorithm that was never put into practice until now. A packrat parser can recognize any string defined by a TDPL grammar in linear time, providing the power and flexibility of a backtracking recursive descent parser without the attendant risk of exponential parse time. A packrat parser can recognize any LL(k) or LR(k) language, as well as many languages requiring unlimited lookahead that cannot be parsed by shift/reduce parsers. Packrat parsing also provides better composition properties than LL/LR parsing, making it more suitable for dynamic or extensible languages. The primary disadvantage of packrat parsing is its storage cost, which is a constant multiple of the total input size rather than being proportional to the nesting depth of the syntactic constructs appearing in the input. Monadic combinators and lazy evaluation enable elegant and direct implementations of packrat parsers in recent functional programming languages such as Haskell. Three different packrat parsers for the Java language are presented here, demonstrating the construction of packrat parsers in Haskell using primitive pattern matching, using monadic combinators, and by automatic generation from a declarative parser specification. The prototype packrat parser generator developed for the third case itself uses a packrat parser to read its parser specifications, and supports full TDPL notation extended with 'semantic predicates' allowing parsing decisions to depend on the semantic values of other syntactic entities. Experimental results show that all of these packrat parsers run reliably in linear time, efficiently support 'scannerless' parsing with integrated lexical analysis, and provide the user-friendly error-handling facilities necessary in practical applications.},
	Author = {Bryan Ford},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Packrat%20parsing.pdf},
	Month = {September},
	School = {MIT},
	Title = {Packrat parsing: a practical linear-time algorithm with backtracking},
	Url = {http://www.pdos.lcs.mit.edu/~baford/packrat/thesis/},
	Year = {2002}}

@url{jackson:micromodels,
	Author = {Daniel Jackson},
	Keywords = {alloy},
	Note = {\texttt{http://sdg.lcs.mit.edu/alloy/reference-manual.pdf}},
	Title = {Micromodels of software: Modeling and analysis with {A}lloy},
	Url = {http://sdg.lcs.mit.edu/alloy/reference-manual.pdf},
	Urldate = {2001}}

@article{merkle:helical,
	Abstract = {Helical logic is a theoretical proposal for a future computing technology using the presence or absence of individual electrons (or holes) to encode 1s and 0s. The electrons are constrained to move along helical paths, driven by a rotating electric field in which the entire circuit is immersed. The electric field remains roughly orthogonal to the major axis of the helix and confines each charge carrier to a fraction of a turn of a single helical loop, moving it like water in an Archimedean screw. Each loop could in principle hold an independent carrier, permitting high information density. One computationally universal logic operation involves two helices, one of which splits into two ``descendant'' helices. At the point of divergence, differences in the electrostatic potential resulting from the presence or absence of a carrier in the adjacent helix controls the direction taken by a carrier in the splitting helix. The reverse of this sequence can be used to merge two initially distinct helical paths into a single outgoing helical path without forcing a dissipative transition. Because these operations are both logically and thermodynamically reversible, energy dissipation can be reduced to extremely low levels. This is the first proposal known to the authors that combines thermodynamic reversibility with the use of single charge carriers. It is important to note that this proposal permits a single electron to switch another single electron, and does not require that many electrons be used to switch one electron. The energy dissipated per logic operation can likely be reduced to less than 10-27 joules at a temperature of 1 Kelvin and a speed of 10 gigahertz, though further analysis is required to confirm this. Irreversible operations, when required, can be easily implemented and should have a dissipation approaching the fundamental limit of ln 2 something kT.},
	Annote = {Basically a proposed physical model for implementing reversible logic.},
	Author = {Ralph C. Merkle and K. Eric Drexler},
	Journal = {Nanotechnology},
	Keywords = {reversible},
	Local-Url = {/Users/graham/Desktop/Reversible%20Computing/helical.html},
	Pages = {325-339},
	Title = {Helical Logic},
	Url = {http://www.zyvex.com/nanotech/helical/helical.html},
	Volume = {7},
	Year = {1996}}

@misc{xmlschema,
	Annote = {available at \verb|http://www.w3.org/TR/xmlschema-2/|},
	Howpublished = {W3C Recommendation},
	Key = {XML Schema},
	Keywords = {xml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/datatypes.html},
	Month = {May},
	Organization = {W3C},
	Title = {{XML Schema} Part 2: Datatypes},
	Url = {http://www.w3.org/TR/xmlschema-2/},
	Year = {2001}}

@inproceedings{flanagan:predicate,
	Address = {Portland, Oregon},
	Author = {Cormac Flanagan and Shaz Qadeer},
	Booktitle = {Predicate abstraction for software verification},
	Organization = {ACM Press},
	Pages = {191--202},
	Title = {Proceedings of the 29th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
	Year = {2002}}

@inproceedings{younis:practical,
	Author = {Saed G. Younis and Thomas F. Knight Jr.},
	Booktitle = {Proceedings of the 1993 Symposium on Integrated Systems},
	Keywords = {reversible},
	Local-Url = {file://localhost/Users/graham/Desktop/Reversible%20Computing/crl.ps},
	Pages = {234-250},
	Publisher = {MIT Press},
	Title = {Practical Implementation of Charge Recovering Asymptotically Zero Power CMOS},
	Year = {1993}}

@techreport{scharil:traits,
	Abstract = {Inheritance is the fundamental reuse mechanism in object-oriented programming languages; its most prominent variants are single inheritance, multiple inheritance, and mixin inheritance. In the first part of this paper, we identify and illustrate the conceptual and practical reusability problems that arise with these forms of inheritance. We then present a simple compositional model for structuring object-oriented programs, which we call traits. Traits are essentially groups of methods that serve as building blocks for classes and are primitive units of code reuse. In this model, classes are composed from a set of traits by specifying glue code that connects the traits together and accesses the necessary state. We demonstrate how traits overcome the problems arising with the different variants of inheritance, we discuss how traits can be implemented effectively, and we summarize our experience applying traits to refactor an existing class hierarchy.},
	Author = {Nathanael Sch{\"a}ril and St{\'e}phane Ducasse and Oscar Nierstrasz and Andrew Black},
	Institution = {OGI School of Science and Engineering},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Traits%20-%20Composable%20Units%20of%20Behavior.pdf},
	Title = {Traits: Composable Units of Behavior},
	Url = {http://www.iam.unibe.ch/~scg/Research/Traits/},
	Year = {2002}}

@inproceedings{younis:asymptotically,
	Address = {Napa, CA},
	Author = {Saed G. Younis and Thomas F. Knight Jr.},
	Booktitle = {1994 International Workshop on Low Power Design},
	Keywords = {reversible},
	Pages = {114},
	Title = {Asymptotically Zero Energy Split-Level Charge Recovery Logic},
	Year = {1994}}

@article{sandhu94access,
	Abstract = {This article begins with an explanation of access control and its relationship to other security services such as authentication, auditing and administration. It then reviews the access matrix model and describes different approaches to implementing the access matrix in practical systems. This is followed by a discussion of access control policies which are commonly found in current systems. Finally, we briefly consider the administration of access control. 1 Access Control and Other Security...},
	Author = {Ravi S. Sandhu and Pierangela Samarati},
	Journal = {IEEE Communications Magazine},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/sandhu94access.pdf},
	Month = {1994},
	Number = {9},
	Pages = {40--48},
	Title = {Access Control: Principles and Practice},
	Url = {http://citeseer.nj.nec.com/article/sandhu94access.html},
	Volume = {32},
	Year = {1994}}

@phdthesis{vieri:reversible,
	Annote = {Describes a fully reversible microprocessor, Pendulum, in 0.5 um CMOS process and tested.  18 instructions, 12-bit wide data and address values.  Fully reversible ISA.},
	Author = {Carlin James Vieri},
	Keywords = {reversible},
	Local-Url = {/Users/graham/Desktop/Reversible%20Computing/main.pdf},
	Month = {June},
	School = {Massachusetts Institute of Technology},
	Title = {Reversible Computer Engineering and Architecture},
	Year = {1999}}

@phdthesis{frank:reversibility,
	Annote = {Another chip implementation.},
	Author = {Michael P. Frank},
	Keywords = {reversible},
	Local-Url = {file://localhost/Users/graham/Desktop/Reversible%20Computing/phdthesis.pdf},
	School = {Massachusetts Institute of Technology},
	Title = {Reversibility for Efficient Computation},
	Year = {1999}}

@inproceedings{jajoida97unified,
	Abstract = {Although several access control policies can be devised for controlling access to information, all existing authorization models, and the corresponding enforcement mechanisms, are based on a specific policy (usually the closed policy). As a consequence, although different policy choices are possible in theory, in practice only a specific policy can be actually applied within a given system. However, protection requirements within a system can vary dramatically, and no single policy may...},
	Address = {Tucson, AZ},
	Author = {Sushil Jajodia and Pierangela Samarati and V. S. Subrahmanian and Eliza Bertino},
	Booktitle = {SIGMOD'97},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/sigmod97.pdf},
	Month = {May},
	Pages = {474--485},
	Title = {A unified framework for enforcing multiple access control policies},
	Url = {http://citeseer.nj.nec.com/jajodia97unified.html},
	Year = {1997}}

@article{merkle:reversible,
	Abstract = {The continuing revolution in computer hardware is packing ever more logic gates in ever smaller volumes.   Unfortunately this produces ever more heat, which will limit the feasible packing density and performance unless the energy dissipated by each logic operation can also be dramatically reduced.  To reduce the energy dissipation of a logic operation below ln(2)kT (near thermal noise) requires the use of reversible logic for fundamental thermodynamic reasons.  Extrapolation of current trends suggest this limit will become significant within one to two decades.   Many real devices can be viewed as electrically controlled switches, so a method of using an abstract switch in a reversible manner is useful.  Two methods of using switches to implement reversible computations are discussed in this paper.  The first method has an energy dissipation which is proportional to the square of the error in the voltage, while the second method has an energy dissipation which can in principle be reduced indefinitely by slowing the speed of computation.  The first method is basically an extension to 'pass logic' which has been previously used with both nMOS (hot clock nMOS) and CMOS transmission gates to achieve low energy dissipation.  The second method is a novel thermodynamically reversible logic system based on CCD-like operations which switches charge packets in a reversible fashion to achieve low energy dissipation.},
	Annote = {Discusses two ways to do it: one has energy dissipation which is proportional to the square of the error in the voltage, and the second can be in principle be reduced indefinitely by slowing the speed of the computation.  Second method is the novel one.{\par}advantages include the ability to run with less dissipation meaning denser circuits, lower total energy savings.{\par}If things are done reversibly even without changing the computer architecture this could be a win--dissipation needed for (some) register stores, but not all.{\par}primitive operation is{\newline}if (Condition == 0) { Destination = Source; Source = 0 }{\par}This never merges or splits charge packets, never discharges charge packets to groudn, and moves them in a thermodynamically reversible fashion from a set of condition buckets to a set of destination buckets.{\par}This is logically complete.{\par}Shows an  circuit disagram for it.},
	Author = {Ralph C. Merkle},
	Journal = {Nanotechnology},
	Keywords = {reversible},
	Local-Url = {file://localhost/Users/graham/Desktop/Reversible%20Computing/electro.ps},
	Pages = {21--40},
	Title = {Reversible Electronic Logic Using Switches},
	Volume = {4},
	Year = {1993}}

@article{li:reversible,
	Author = {Ming Li and John Tromp and Paul Vit{\'a}nyi},
	Journal = {{IEEE} Conference on Computational Complexity},
	Keywords = {reversible},
	Local-Url = {file://localhost/Users/graham/Desktop/Reversible%20Computing/physicad97.ps},
	Pages = {301-306},
	Title = {Reversible Simulation of Irreversible Computation},
	Year = {1996}}

@inproceedings{baker:nreversal,
	Address = {St. Malo, France},
	Author = {Henry G. Baker},
	Booktitle = {Proceedings of the International Workshop on Memory Management},
	Keywords = {reversible},
	Local-Url = {file://localhost/Users/graham/Desktop/Reversible%20Computing/ReverseGC.ps},
	Month = {September},
	Title = {{NREVERSAL} of Fortune---The Thermodynamics of Garbage Collection},
	Year = {1992}}

@inproceedings{divimercati96federated,
	Abstract = {One of the new emerging technology for data management is today represented by federated systems.  The success of this technology, which has been receiving increasing attention from researchers and developers, comes from the need to integrate and work on different existing systems independently developed and evolved.  The necessity of making them available to users as if they were a single system while at the same time not affecting their independent working arises several issues with respect to authorization management and specification and to access control enforcement.  In this paper we outline some of these issues and illustrate the basic ideas of possible authorization model for the protection of information in federated systems.},
	Address = {Lake Arrowhead, California, United States},
	Author = {Sabrina {De Capitani di Vimercati} and Pierangela Samarati},
	Booktitle = {Proceedings of the 1996 workshop on new security paradigms},
	Isbn = {0-89791-944-0},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/fed1-nsp96.pdf},
	Pages = {87--99},
	Publisher = {ACM Press},
	Title = {Access control in federated systems},
	Url = {http://doi.acm.org/10.1145/304851.304871},
	Year = {1996}}

@article{li:reversibility,
	Author = {Ming Li and Paul Vit{\'a}nyi},
	Journal = {Proceedings of the Royal Society of London},
	Keywords = {reversible},
	Pages = {769-789},
	Title = {Reversibility and Adiabatic Computation: Trading Time and Space for Energy},
	Volume = {452},
	Year = {1996}}

@article{damiani01controllingaccess,
	Abstract = {Access-control techniques for XML provide a simple and effective way of protecting confidential information at the same granularity level provided by XML schemata. They allow for definition and enforcement of access restrictions directly on the structure and content of XML documents.},
	Author = {Ernesto Damiani and Pierangela Samarati and Sabrina {De Capitani di Vimercati} and Stefano Paraboschi},
	Journal = {IEEE Internet Computing},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/ieee-ic.pdf},
	Number = {6},
	Pages = {18--28},
	Title = {Controlling access to {XML} documents},
	Url = {http://portal.acm.org/citation.cfm?id=613649&dl=ACM&coll=GUIDE#abstract},
	Volume = {5},
	Year = {2001}}

@unpublished{wu:100prisoners,
	Author = {William Wu},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/100prisonersLightBulb.pdf},
	Title = {100 Prisoners and a Lightbulb},
	Url = {http://www.ocf.berkeley.edu/~www/},
	Year = {2003}}

@inproceedings{jajodialogical,
	Abstract = {A major drawback of existing access control systems is that they have all been developed with a specific access control policy in mind. This means that all protection requirements (i.e., accesses to be allowed or denied) must be specified in terms of the policy enforced by the system. While this may be trivial for some requirements, specification of other requirements may become quite complex or even impossible. The reason for this is that a single policy simply cannot capture different...},
	Address = {Oakland, CA, USA},
	Author = {S. Jajodia and P. Samarati and V. S. Subrahmanian},
	Booktitle = {Proceedings of the 1997 IEEE Symposium on Security and Privacy},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/jajodia97logical.pdf},
	Pages = {31--42},
	Publisher = {IEEE Press},
	Title = {A logical language for expressing authorizations},
	Url = {http://citeseer.nj.nec.com/jajodia97logical.html},
	Year = {1997}}

@inproceedings{damiani02SVG,
	Abstract = {Selectively controlling access to images' features is becoming more and more essential as modern computing and communications encourage the use of information in graphical form. The monolithic nature of traditional raster images makes controlled dissemination of their internal features a difficult task. Recently, however, XML-based graphics formats such as the Scalable Vector Graphics (SVG) standard, are becoming increasingly popular due to their recognized advantages in terms of application interoperability. In this paper we exploit the XML-based data model of SVG to present a model and a syntax aimed at selectively controlling access to graphic information on the Internet. Our model explicitly deals with the basic notions underlying representation of complex objects via vector graphics, while our enforcement technique efficiently exploits lower level DOM representation of XML data. },
	Author = {Ernesto Damiani and Sabrina {De Capitani di Vimercati} and Eduardo Fern\'andez-Medina and Pierangela Samarati},
	Booktitle = {Proceedings of DBSec 2002},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/ifip02.pdf},
	Pages = {219--230},
	Title = {Access control of {SVG} documents},
	Year = {2002}}

@unpublished{peeters:kpax,
	Abstract = {Today's web applications are often built using Java technology. Proponents of Java advocate its many advanced features and repeatedly claim there is some magic link and interdependence between web technology and Java as a programming language. The fabric of the web however, the open protocols like TCP/IP, HTTP and standards like HTML and XML, is in fact language-, operating-system, and vendor-neutral. It can be argued that Java is nothing new, and only a clever cocktail of features of several older technologies. ANSI Common Lisp provides nearly all of the advantages that make Java attractive, including automatic memory management, dynamic objectoriented programming and portability. Several other features including its interactivity and full dynamic typing make Lisp development a very different experience. It is my thesis that the venerable computer language Common Lisp is at least as capable as an implementation technology for web applications even though conceived and refined long before the internet revolution. I will show how some of Lisp's features, many which are not (yet) available in Java, make it a great platform to build web applications on. },
	Annote = {Describes the KPAX framework.},
	Author = {Nicky Peeters},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/lispification.pdf},
	Month = {June},
	Title = {Using {C}ommon {L}isp to build Web Applications},
	Year = {2003}}

@misc{computer-implementation,
	Abstract = {This paper presents an architecture for implementation of multiple access control policies within a CORBASEC framework. CORBASEC is a security service specification provided by OMG for implementation of security in CORBA compliant systems. Because of the differences in ORB implementations among vendors and divergent security needs of the CORBA based applications in different commercial markets, CORBASEC provides a general security reference model. The reference model can then be used by...},
	Author = {Ramaswamy Chandramouli Computer},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/implementation-of-multiple-access.pdf},
	Title = {Implementation of Multiple Access Control Policies within a {CORBASEC} framework},
	Url = {http://citeseer.nj.nec.com/398667.html},
	Year = {1999}}

@inbook{samarati01policiesmodelsmechanisms,
	Abstract = {Access control is the process of mediating every request to resources and data maintained by a system and determining whether the request should be granted or denied.  The access control decision is enforced by a mechanism implementing regulations established by a security policy.  Different access control policies can be applied, corresponding to different criteria for defining what should, and what should not, be allowed, and, in some sense, to different definitions of what ensuring security means.  In this chapter we investigate the basic concepts behind access control design and enforcement, and point out different security requirements that may need to be taken into consideration.  We discuss several access control policies, and models formalizing them, that have been proposed in the literature or that are currently under investigation.},
	Author = {Pierangela Samarati and Sabrina {De Capitani di Vimercati}},
	Chapter = {3},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/sam-fosad.pdf},
	Pages = {137--196},
	Publisher = {Springer Verlag},
	Title = {Foundations of Security Analysis and Design},
	Year = {2001}}

@inproceedings{quan:uicont,
	Abstract = {Dialog boxes that collect parameters for commands often  create ephemeral, unnatural interruptions of a program's  normal execution flow, encouraging the user to complete the  dialog box as quickly as possible in order for the program to  process that command. In this paper we examine the idea of  turning the act of collecting parameters from a user into a  first class object called a user interface continuation. Programs can create user interface continuations by specifying  what information is to be collected from the user and supplying a callback (i.e., a continuation) to be notified with the  collected information. A partially completed user interface  continuation can be saved as a new command, much as  currying and partially evaluating a function with a set of  parameters  produces  a  new  function.  Furthermore,  user  interface  continuations,  like  other  continuation-passing  paradigms, can be used to allow program execution to continue uninterrupted while the user determines a command's  parameters at his or her leisure.},
	Annote = {Intensely neat idea.},
	Author = {Dennis Quan and David Huynh and David R. Karger and Robert Miller},
	Booktitle = {Proceedings of UIST 2003},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/uist2003-uicont.pdf},
	Title = {User Interface Continuations},
	Url = {http://haystack.lcs.mit.edu/publications.html},
	Year = {2003}}

@inproceedings{bonatti01dataarchives,
	Abstract = {We present an approach to enforce access control at data archives that need to make their data selectively available on the Web. The paper discusses protection requirements and access control policies for regulating access to the stored data. It presents a model for enforcing access control regulations and related language for expressing these regulations.{\newline}},
	Address = {Paris, France},
	Author = {P. Bonatti and E. Damiani and S. {De Capitani di Vimercati} and P. Samarati},
	Booktitle = {Proceedings of the 16th international conference on information security: trusted information},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/sec01.pdf},
	Pages = {261--276},
	Publisher = {Kluwer International Federation For Information Processing Series},
	Title = {An access control model for data archives},
	Url = {http://portal.acm.org/citation.cfm?id=510782&dl=ACM&coll=GUIDE#abstract},
	Year = {2001}}

@article{sandhu96audit,
	Abstract = {Authentication, access control, and audit together provide the foundation for information and system security.},
	Author = {Ravi Sandhu and Pierangela Samarati},
	Journal = {ACM Computing Surveys},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/survey96.pdf},
	Number = {1},
	Pages = {241--243},
	Title = {Authentication, access control, and audit},
	Url = {http://doi.acm.org/10.1145/234313.234412},
	Volume = {28},
	Year = {1996}}

@inproceedings{heckman98applying,
	Abstract = {This paper describes how the composition principle of Abadi and Lamport can be applied to specify and compose systems where access control policies are distributed among a hierarchy of agents. Examples of such systems are layered secure operating systems, where the mandatory access control policy is enforced by the lowest system layer and discretionary and applicationspecific policies are implemented by outer layers, and microkernel operating systems, where the access control policy may be...},
	Author = {Mark Heckman and Karl N. Levitt},
	Booktitle = {{HICSS} (3)},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/applying-the-composition-principle.pdf},
	Pages = {338--347},
	Title = {Applying the Composition Principle to Verify a Hierarchy of Security Servers},
	Url = {http://citeseer.nj.nec.com/134822.html},
	Year = {1998}}

@article{bonatti02algebra,
	Abstract = {Despite considerable advancements in the area of access control and authorization languages, current approaches to enforcing access control are all based on monolithic and complete specifications. This assumption is too restrictive when access control restrictions to be enforced come from the combination of different policy specifications, each possibly under the control of independent authorities, and where the specifics of some component policies may not even be known apriori. Turning individual specifications into a coherent policy to be fed into the access control system requires a nontrivial combination and translation process. This article addresses the problem of combining authorization specifications that may be independently stated, possibly in different languages and according to different policies. We propose an algebra of security policies together with its formal semantics and illustrate how to formulate complex policies in the algebra and reason about them. A translation of policy expressions into equivalent logic programs is illustrated, which provides the basis for the implementation of the algebra. The algebra's expressiveness is analyzed through a comparison with first-order logic.},
	Author = {Piero Bonatti and Sabrina {De Capitani di Vimercati} and Pierangela Samarati},
	Journal = {ACM Transactions on Information Systems Security},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/tissec02.pdf},
	Number = {1},
	Pages = {1--35},
	Title = {An algebra for composing access control policies},
	Url = {http://doi.acm.org/10.1145/504909.504910},
	Volume = {5},
	Year = {2002}}

@article{bertino99flexible,
	Abstract = {this article, we present an authorization model that can be used to express a number of discretionary access control policies for relational data management systems. The model permits both positive and negative authorizations and supports exceptions at the same time. The model is flexible in that the users can specify, for each authorization they grant, whether the authorization can allow for exceptions or whether it must be strongly obeyed. It provides authorization management for groups with...},
	Author = {Elisa Bertino and Sushil Jajodia and Pierangela Samarati},
	Journal = {ACM Transactions on Information Systems},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/bertino99flexible.pdf},
	Number = {2},
	Pages = {101--140},
	Title = {A flexible authorization mechanism for relational data management systems},
	Url = {http://citeseer.nj.nec.com/bertino99flexible.html},
	Volume = {17},
	Year = {1999}}

@article{jajodia01multiplepolicies,
	Author = {Sushil Jajodia and Pierangela Samarati and Maria Luisa Sapino and V. S. Subrahmanian},
	Journal = {ACM Transactions on Database Systems},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/tods-logic.pdf},
	Number = {2},
	Pages = {214--260},
	Title = {Flexible support for multiple access control policies},
	Url = {http://doi.acm.org/10.1145/383891.383894},
	Volume = {26},
	Year = {2001}}

@inproceedings{jackson:alcoa,
	Address = {Limerick, Ireland},
	Author = {Daniel Jackson and Ian Schechter and Ilya Shlyakhter},
	Booktitle = {Proceedings of International Conference on Software Engineering},
	Keywords = {alloy},
	Month = {June},
	Publisher = {IEEE},
	Rss-Description = {The seminal Alloy paper},
	Title = {Alcoa: the {A}lloy Constraint Analyzer},
	Year = {2000}}

@article{bertino98access,
	Abstract = {this paper, we present an access control model in which periodic temporal intervals are associated with authorizations. An authorization is automatically granted in the specified intervals and revoked when such intervals expire. Deductive temporal rules with periodicity and order constraints are provided to derive new authorizations based on the presence or absence of other authorizations in specific periods of time. We provide a solution to the problem of ensuring the uniqueness of the global...},
	Author = {Elisa Bertino and Claudio Bettini and Elena Ferrari and Pierangela Samarati},
	Journal = {ACM Transactions on Database Systems},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/tods-temporal.pdf},
	Number = {3},
	Pages = {231--285},
	Title = {An access control model supporting periodicity constraints and temporal reasoning},
	Url = {http://citeseer.nj.nec.com/bertino98access.html},
	Volume = {23},
	Year = {1998}}

@article{abadi93calculus,
	Abstract = {We study some of the concepts, protocols, and algorithms for access control in distributed systems, from a logical perspective. We account for how a principal may come to believe that another principal is making a request, either on his own or on someone else's behalf. We also provide a logical language for access control lists, and theories for deciding whether requests should be granted.},
	Author = {Mart{\'\i}n Abadi and Michael Burrows and Butler Lampson and Gordon Plotkin},
	Journal = {ACM Transactions on Programming Languages and Systems},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/abadi91calculus.pdf},
	Month = {September},
	Number = {4},
	Pages = {706--734},
	Title = {A calculus for access control in distributed systems},
	Url = {http://citeseer.nj.nec.com/abadi91calculus.html},
	Volume = {15},
	Year = {1993}}

@misc{xacml,
	Annote = {available at \verb|http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=xacml|},
	Editor = {Simon Godik and Tim Moses},
	Howpublished = {OASIS Standard},
	Key = {XACML},
	Keywords = {xml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/oasis-xacml-1.0.pdf},
	Month = {February},
	Title = {{eXtensible Access Control Markup Language (XACML)} Version 1.0},
	Url = {http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=xacml},
	Year = {2003}}

@article{damiani00design,
	Abstract = {More and more information is distributed in XML format, both on corporate intranetsand on the global Net. In this paper an Access Control System for XML is described allowing for definition and enforcement of access...},
	Author = {Ernesto Damiani and Sabrina {De Capitani di Vimercati} and Stefano Paraboschi and Pierangela Samarati},
	Journal = {Computer Networks},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/www9.pdf},
	Number = {1--6},
	Pages = {59--75},
	Title = {Design and implementation of an access control processor for {XML} documents},
	Url = {http://citeseer.nj.nec.com/damiani00design.html},
	Volume = {33},
	Year = {2000}}

@article{sandhu96rolebased,
	Abstract = {This article introduces a family of reference models for rolebased access control (RBAC) in which permissions are associated with roles, and users are made members of appropriate roles. This greatly simplifies management of permissions. Roles are closely related to the concept of user groups in access control. However, a role brings together a set of users on one side and a set of permissions on the other, whereas user groups are typically defined as a set of users only. The basic concepts of...},
	Author = {Ravi S. Sandhu and Edward J. Coyne and Hal L. Feinstein and Charles E. Youman},
	Journal = {IEEE Computer},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/sandhu96rolebased.pdf},
	Number = {2},
	Pages = {38--47},
	Title = {Role-Based access control models},
	Url = {http://citeseer.nj.nec.com/article/sandhu96rolebased.html},
	Volume = {29},
	Year = {1996}}

@inproceedings{damiani01fine,
	Abstract = {Lightweight protocols for remote service invocation via HTTP and XML, such asSOAP, are rapidly gaining acceptance among developers of Internet-based e-services, especially because of their rewall-traversal capabilities. However, no standard technique for access control security is currently defined for either HTTP or SOAP itself. Concerns have been raised about the possibility that different SOAP applications will deal with embedded security in different ways, leading to application-dependent...},
	Author = {Ernesto Damiani and Sabrina {De Capitani di Vimercati} and Stefano Paraboschi and Pierangela Samarati},
	Booktitle = {Proceedings of the 10th International World Wide Web Conference},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/www10.pdf},
	Month = {May},
	Organization = {ACM},
	Pages = {504--513},
	Publisher = {ACM Press},
	Title = {Fine grained access control for {SOAP} E-services},
	Url = {http://citeseer.nj.nec.com/damiani01fine.html},
	Year = {2001}}

@inproceedings{naumovich:permission-analysis,
	Abstract = {Open distributed systems are becoming increasingly popular.  Such systems include components that may be obtained from a number of different sources.  For example, Java allows run-time loading of software components residing on remote machines.  One unfortunate side-effect of this openness is the possibility that ``hostile'' software components may compromise the security of both the program and the system on which it runs.  Java offers a built-in security mechanism, using which programmers can give permissions to distributed components and check these permissions at run-time.  This security model is flexible, but using it is not straightforward, which may lead to insufficiently tight permission checking and therefore breaches of security....},
	Author = {Gleb Naumovich},
	Booktitle = {Proceedings of the International Symposium on Software Testing and Analysis ({ISSTA} '02)},
	Keywords = {xacml},
	Month = {July},
	Pages = {33--43},
	Title = {A Conservative Algorithm for Computing the Flow of Permissions in {J}ava Programs},
	Year = {2002}}

@article{damiani02fine,
	Abstract = {Web-based applications greatly increase information availability and ease of access, which is optimal for public information. The distribution and sharing of information via the Web that must be accessed in a selective way, such as electronic commerce transactions, require the definition and enforcement of security controls, ensuring that information will be accessible only to authorized entities. Different approaches have been proposed that address the problem of protecting information in a Web system. However, these approaches typically operate at the file-system level, independently of the data that have to be protected from unauthorized accesses. Part of this problem is due to the limitations of HTML, historically used to design Web documents. The extensible markup language (XML), a markup language promoted by the World Wide Web Consortium (W3C), is de facto the standard language for the exchange of information on the Internet and represents an important opportunity to provide fine-grained access control. We present an access control model to protect information distributed on the Web that, by exploiting XML's own capabilities, allows the definition and enforcement of access restrictions directly on the structure and content of the documents. We present a language for the specification of access restrictions, which uses standard notations and concepts, together with a description of a system architecture for access control enforcement based on existing technology. The result is a flexible and powerful security system offering a simple integration with current solutions.},
	Author = {Ernesto Damiani and Sabrina {De Capitani di Vimercati} and Stefano Paraboschi and Pierangela Samarati},
	Journal = {ACM Transactions on Information Systems Security},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Pierangela%20Samarati/xml-tissec.pdf},
	Number = {2},
	Pages = {169--202},
	Title = {A fine-grained access control system for {XML} documents},
	Url = {http://portal.acm.org/citation.cfm?doid=505586.505590#},
	Volume = {5},
	Year = {2002}}

@article{sandhu93latticebased,
	Abstract = {The objective of this article is to give a tutorial on lattice-based access control models for computer security. The paper begins with a review of Denning's axioms for information #ow policies, which provide a theoretical foundation for these models. The structure of security labels in the military and government sectors, and the resulting lattice is discussed. This is followed bya review of the Bell-LaPadula model, which enforces information #ow policies by means of its simple-security...},
	Author = {Ravi S. Sandhu},
	Journal = {IEEE Computer},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/sandhu93latticebased.pdf},
	Month = {November},
	Number = {11},
	Pages = {9--19},
	Title = {Lattice-based access control models},
	Url = {http://citeseer.nj.nec.com/sandhu93latticebased.html},
	Volume = {26},
	Year = {1993}}

@inproceedings{kudo00xml,
	Abstract = {The extensible markup language (XML) is a promising standard for  describing semi-structured information and contents on the Internet.  When XML comes to be a widespread data encoding format for  Web applications, safeguarding the accuracy of the information  represented in XML documents will be indispensable. In this paper,  we propose a provisional authorization model that provides XML  with sophisticated access control mechanism. The well-recognized  need for such a system has only recently been addressed. Based on  this authorization model, we present an XML access control  language (XACL) that integrates security features such as  authorization, non-repudiation, confidentiality, and an audit trail for  XML documents. We describe our implementation, which can be  used as an extension of a Web server for e-Business applications.},
	Author = {Michiharu Kudo and Satoshi Hada},
	Booktitle = {7th ACM Conference on Computer and Communication Security},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/ccs2k-kudo.pdf},
	Month = {November},
	Title = {{XML} Document Security based on Provisional Authorization},
	Url = {http://www.trl.ibm.com/projects/xml/xacl/index.htm},
	Year = {2000}}

@inproceedings{jajodia01provisional,
	Abstract = {Past generations of access control systems, when faced with an access request, have issued a ``yes'' (resp. ``no'') answer to the access request resulting in access being granted (resp. denied). In this paper, we argue that for the world's rapidly proliferating business to business (B2B) applications and auctions, ``yes/no'' responses are just not enough. We propose the notion of a ``provisional authorization'' which intuitively says ``You may perform the desired access provided you cause condition C to be satisfied.'' For instance, a user accessing an online brokerage may receive some information if he fills out his name/address, but not otherwise. While a variety of such provisional authorization mechanisms exist on the web, they are all hardcoded on an application by application basis. We show that given (almost) any logic L, we may define a provisional authorization specification language . is based on the declarative, polynomially evaluable authorization specification language proposed by Jajodia et al. We define programs in , and specify how given any access request, we must find a ``weakest'' precondition under which the access can be granted (in the worst case, if this weakest precondition is ``false'' this amounts to a denial). We develop a model theoretic semantics for and show how it can be applied to online sealed-bid auction servers and online contracting. },
	Author = {S. Jajodia and M. Kudo and V. S. Subrahmanian},
	Booktitle = {Workshop on Security and Privacy in E-Commerce},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/wspec2k-kudo.pdf},
	Month = {November},
	Title = {Provisional Authorization},
	Url = {http://www.trl.ibm.com/projects/xml/xacl/index.htm},
	Year = {2000}}

@inproceedings{cappello2003pdcs,
	Author = {Peter Cappello},
	Booktitle = {Proc. 15th IASTED Int. Conf. on Parallel and Distributed Computing and Systems},
	Month = {November},
	Pages = {751 - 756},
	Title = {{Janet's Abstract Distributed Service Component}},
	Year = {2003}}

@inproceedings{jackson00automating,
	Abstract = {An automatic analysis method for first-order logic with sets and  relations is described. A first-order formula is translated to a  quantifier-free boolean formula, which has a model when the  original formula has a model within a given scope (that is,  involving no more than some finite number of atoms). Because  the satisfiable formulas that occur in practice tend to have small  models, a small scope usually suffices and the analysis is efficient.  The paper presents a simple logic and gives a compositional  translation scheme. It also reports briefly on experience using the  Alloy Analyzer, a tool that implements the scheme.},
	Author = {Daniel Jackson},
	Booktitle = {Proc. ACM SIGSOFT COnf. Foundations of Software Engineering},
	Keywords = {alloy},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Alloy/alcoa-algorithm.pdf},
	Month = {November},
	Title = {Automating First-Order Relational Logic},
	Url = {http://alloy.mit.edu/publications.html},
	Year = {2000}}

@article{tractablesatisfiability,
	Author = {Dalal, Mukesh and David W. Etherington},
	Journal = {Information Processing Letters},
	Pages = {173-180},
	Title = {A heirarchy of tractable satisfiability problems},
	Volume = {44},
	Year = {1992}}

@techreport{abadpeiro99plas,
	Abstract = {A key issue in authorization services and computer security in general is the definition of security policies [1]. To help define security policies we have developed a new policy language for authorization systems (PLAS), and a framework in which to apply it. This paper describes the PLAS framework and shows how can it be used within current fields of research in IT security such as protection against downloadable code and in intrusion-detection systems.},
	Author = {Jose L. Abad-Peiro and Herv\'e Debar and Thomas Schweinberger and Peter Trommler},
	Institution = {IBM Research Division},
	Keywords = {xacml},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/abad-peiro99plas.pdf},
	Number = {RZ 3126},
	Title = {{PLAS} --- {P}olicy Language for Authorizations},
	Url = {http://citeseer.nj.nec.com/abad-peiro99plas.html},
	Year = {1999}}

@inproceedings{marinov02valloy,
	Abstract = {We propose VAlloy, an extension to the first order, relational language Alloy. Alloy is suitable for modeling structural properties of object-oriented software. However, Alloy lacks support for dynamic dispatch, i.e., function invocation based on actual parameter types. VAlloy introduces virtual functions in Alloy, which enables intuitive modeling of inheritance. Models in VAlloy are automatically translated into Alloy and can be automatically checked using the existing Alloy Analyzer. We illustrate the use of VAlloy by modeling object equality, such as in Java. We also give specifications for a part of the Java Collections Framework.},
	Address = {Copenhagen, Denmark},
	Author = {Darko Marinov and Sarfaz Khurshid},
	Booktitle = {11th International Symposium of Formal Methods Europe (FME 2002)},
	Keywords = {alloy},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Alloy/valloy.pdf},
	Month = {July},
	Title = {{VA}lloy: Virtual Functions Meet A Relational Language},
	Url = {http://alloy.mit.edu/publications.html},
	Year = {2002}}

@mastersthesis{waingold01automated,
	Abstract = {Object modeling allows software designers and programmers to concisely describe the essence of a program's design, by describing program state.  Automatically extracting object models from code can be useful for many reasons: to summarize the architecture of the program, to resolve anomalies in the design, or even to find bugs.  This thesis describes Superwomble, a tool for automatically extracting object models from Java bytecode.  The object model is generated using an unsound type analysis on the code.  The unsoundness is an engineering tradeoff that in practice results in correct object models.  The tool also allows for automatic generation of abstract object models, by applying user-defined abstraction rules to the models.  The techniques for analysis and abstraction are defined, and are evaluated on some sample programs.},
	Author = {Allison Waingold},
	Keywords = {alloy},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Alloy/waingold_masters.pdf},
	Month = {May},
	School = {MIT},
	Title = {Automated Extraction of Abstract Object Models},
	Url = {http://alloy.mit.edu/publications.html},
	Year = {2001}}

@misc{xpath,
	Abstract = {XPath is a language for addressing parts of an XML document, designed to be used by both XSLT and XPointer.},
	Howpublished = {W3C Recommendation},
	Keywords = {xml},
	Month = {November},
	Organization = {W3C},
	Title = {{XML} Path Language ({XP}ath)},
	Url = {http://www.w3.org/TR/xpath},
	Year = {1999}}

@inproceedings{jackson01lightweight,
	Abstract = {A program's object model captures the essence of its design. For some programs, no object model was developed during design; for others, an object model exists but may be out-of-sync with the code. This paper describes a tool that automatically extracts an object model from the classfiles of a Java program. Unlike existing tools, it handles container classes, by inferring the types of elements stored in a container, and eliding the container itself. This feature is crucial for obtaining models that show the structure of the abstract state, and bear some relation to conceptual models. Although the tool performs only a simple, heuristic analysis that is almost entirely local, the resulting object model is surprisingly accurate. The paper explains what object models are and why they are useful; describes the analysis, its assumptions and limitations; evaluates the tool for accuracy, and illustrates its use, on a suite of sample programs. },
	Author = {Daniel Jackson and Allison Waingold},
	Booktitle = {IEEE Transactions on Software Engineering},
	Keywords = {alloy},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Alloy/womble.pdf},
	Month = {February},
	Title = {Lightweight extraction of object models from bytecode},
	Url = {http://alloy.mit.edu/publications.html},
	Year = {2001}}

@book{cormen,
	Author = {Thomas H. Cormen and Charles E. Leiserson and Ronald L. Rivest},
	Publisher = {MIT Press},
	Title = {Introduction to Algorithms},
	Year = {1990}}

@article{r5rs,
	Author = {Richard Kelsey and William Clinger and Jonathan Rees (eds.)},
	Journal = {Higher-Order and Symbolic Computation},
	Number = {1},
	Title = {Revised${}^5$ Report on the Algorithmic Language Scheme},
	Volume = {11},
	Year = {1998}}

@mastersthesis{nolte02filesystem,
	Abstract = {There are a number of software tools that offer a user the ability to synchronize filesystems despite conflicting updates made to multiple filesystem replicas, and often it is unclear what policies these tools employ and difficult to understand what the policies guarantee.  Alloy, a lightweight formal modeling language, is used in an exploration of filesystem synchronization properties, specifications, and algorithms.  The Alloy language and tool are evaluated in the task of interactively constructing models of filesystem synchronization and understanding their intricacies.},
	Author = {Tina Nolte},
	Keywords = {alloy},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Alloy/tnolte_masters.pdf},
	Month = {August},
	School = {MIT},
	Title = {Exploring Filesystem Synchronization with Lightweight Modeling and Analysis},
	Url = {http://alloy.mit.edu/publications.html},
	Year = {2002}}

@inproceedings{asklund94identifying,
	Abstract = {This paper presents a model for controlling the evolution of documents concurrently developed by teams of authors. Optimistic check-out of revisions and alternatives, and hierarchic merge making use of default rules is presented. In particular the different situations occurring during a merge of parallel development lines and the benefit of storing the full evolution history is discussed. 1 Introduction To cooperate have always been hard. Now when the cooperating persons may be spread all...},
	Address = {Lund, Sweden},
	Author = {U. Asklund},
	Booktitle = {Proceedings of NWPER'94, Nordic Workshop on Programming Environment Research},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/asklund94identifying.pdf},
	Month = {June},
	Title = {Identifying conflicts during structural merge},
	Url = {http://citeseer.nj.nec.com/asklund94identifying.html},
	Year = {1994}}

@inproceedings{vaziri03heap,
	Abstract = {A method for finding bugs in object-oriented code is presented.  It is capable of checking complex user-defined structural properties--that is, of the configuration of objects on the heap--and generates counterexample traces with no false alarms.  It requires no annotation beyond the specification to be checked, and is fully automatic.  The method relies on a three-step translation: from code to a formula in first-order relational logic, then to a propositional formula, and finally to conjunctive normal form.  An off-the-shelf SAT solver is then used to find a solution that constitutes a counterexample.  This underlying scheme, presented previously, does not scale readily.  In this paper we show how a suite of optimizations results in much improved scalability.  The optimizations are based on a special treatment of relations that are known to be functional, and target all steps.  The effect of the optimizations is demonstrated by application to the analysis of a red-black tree implementation.},
	Address = {Warsaw, Poland},
	Author = {Mandana Vaziri and Daniel Jackson},
	Booktitle = {TACAS'03},
	Keywords = {alloy},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/Alloy/checkingHMPs.pdf},
	Title = {Checking Heap-Manipulating Procedures with a Constraint Solver},
	Url = {http://alloy.mit.edu/publications.html},
	Year = {2003}}

@article{SafeTSA,
	Author = {Amme, Wolfram and Niall Dalton and Jeffery von Ronne and Michael Franz},
	Journal = {SIGPLAN '01 Conference on Programming Language Design and Implementation},
	Pages = {137-147},
	Title = {SafeTSA: A Type Safe and Referentially Secure Mobile-Code Representation Based on Static Single Assignment Form},
	Year = {2001}}

@misc{xml,
	Key = {xml},
	Keywords = {xml},
	Organization = {W3C},
	Title = {Extensible Markup Language ({XML}) 1.0 (Second Edition)},
	Url = {http://www.w3.org/TR/REC-xml},
	Year = {2000}}

@inproceedings{Jass,
	Author = {Bartetzko, Detlef and Clemens Fischer and Michael M{\"o}ller and Heike Wehrheim},
	Booktitle = {Proceedings of the First Workshop on Runtime Verification},
	Editor = {Havelund, Klaus and Grigore Rosu},
	Month = {July},
	Title = {Jass---Java with Assertions},
	Year = {2001}}

@article{DbC,
	Author = {Meyer, Bertrand},
	Journal = {IEEE Computer},
	Month = {October},
	Pages = {40-51},
	Title = {Applying Design by Contract},
	Year = {1992}}

@article{SSA,
	Author = {Cytron, R. and J. Ferrante and B. K. Rosen and M. K. Wegman and F. K. Zadeck},
	Journal = {POPL '89},
	Title = {An efficient method of computing static single assignment form},
	Year = {1989}}

@inproceedings{jContractor,
	Author = {Abercrombie, Parker and Karaorman, Murat},
	Booktitle = {Proceedings of Second Workshop on Runtime Verification},
	Local-Url = {file://localhost/Users/graham/Documents/Papers/jContractor_FMSD03.pdf},
	Title = {\hbox{jContractor}: Bytecode Instrumentation Techniques for Implementing Design by Contract in Java},
	Year = {2002}}

@book{JVM,
	Author = {Lindholm, Tim and Yellin, Frank},
	Edition = {2nd},
	Publisher = {Addison-Wesley Pub Co},
	Title = {The Java Virtual Machine Specification},
	Year = {1999}}

@book{Eiffel,
	Author = {Meyer, Bertrand},
	Publisher = {Prentice Hall},
	Title = {Eiffel: The Language},
	Year = {1992}}

@inbook{JML,
	Chapter = {12},
	Editor = {Kilov, Haim and Rumpe, Bernhard and Simmonds, Ian},
	Pages = {175-188},
	Publisher = {Kluwer},
	Title = {Behavioral Specifications of Businesses and Systems},
	Year = {1999}}

@techreport{ESCJava,
	Author = {Detlefs, David and K. Rustan M. Leino and Greg Nelson and James B. Saxe},
	Institution = {Compaq Systems Research Center},
	Month = {December},
	Number = {159},
	Title = {Extended Static Checking},
	Year = {1998}}

@inproceedings{Combinatorial,
	Author = {Tuomas Sandholm and Subhash Suri and Andrew Gilpin and David Levine},
	Organization = {AAMAS},
	Title = {Winner Determination in Combinatorial Auction Generalizations},
	Year = {2002}}

}

@InProceedings{burdy03overview,
  author = 	 {Lilian Burdy and Yoonsik Cheon and David Cok and Michael Ernst and Joe Kiniry and Gary T. Leavens and K. Rustan M. Leino and Erik Poll},
  title = 	 {An overview of {JML} tools and applications},
  booktitle = {Electronic Notes in Theoretical Computer Science},
  pages = 	 {73--89},
  year = 	 {2003},
  editor = 	 {Thomas Arts and Wan Fokkink},
  volume = 	 {80},
  address = 	 {Elsevier},
  month = 	 {June},
}

@Book{meyer92eiffel,
  author = 	 {Bertrand Meyer},
  title = 	 {Eiffel: The Language},
  publisher = 	 {Prentice Hall},
  year = 	 {1992},
}

@Article{meyer92applying,
  author = 	 {Bertrand Meyer},
  title = 	 {Applying Design by Contract},
  journal = 	 {IEEE Computer},
  year = 	 {1992},
  volume = 	 {25},
  number = 	 {10},
  pages = 	 {40--52},
  month = 	 {October},
}

@inproceedings{694486,
	Author = {Klaus Havelund and Grigore Rosu},
	Booktitle = {Proceedings of the 8th International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
	Isbn = {3-540-43419-4},
	Pages = {342--356},
	Publisher = {Springer-Verlag},
	Title = {Synthesizing Monitors for Safety Properties},
	Year = {2002}}

@book{dijkstra76discipline,
	Address = {Englewood Cliffs, NJ},
	Author = {E. W. Dijkstra},
	Publisher = {Prentice Hall},
	Title = {A Discipline of Programming},
	Year = {1976}}

@inproceedings{940116,
	Author = {Koushik Sen and Grigore Rosu and Gul Agha},
	Booktitle = {Proceedings of the 9th European software engineering conference held jointly with 10th ACM SIGSOFT international symposium on Foundations of software engineering},
	Doi = {http://doi.acm.org/10.1145/940071.940116},
	Isbn = {1-58113-743-5},
	Location = {Helsinki, Finland},
	Pages = {337--346},
	Publisher = {ACM Press},
	Title = {Runtime safety analysis of multithreaded programs},
	Year = {2003}}

@inproceedings{263717,
	Author = {Patrice Godefroid},
	Booktitle = {Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
	Doi = {http://doi.acm.org/10.1145/263699.263717},
	Isbn = {0-89791-853-3},
	Location = {Paris, France},
	Pages = {174--186},
	Publisher = {ACM Press},
	Title = {Model checking for programming languages using {V}eri{S}oft},
	Year = {1997}}

@inproceedings{733607,
	Author = {Patrice Godefroid},
	Booktitle = {Proceedings of the 9th International Conference on Computer Aided Verification},
	Isbn = {3-540-63166-6},
	Pages = {476--479},
	Publisher = {Springer-Verlag},
	Title = {{V}eri{S}oft: A Tool for the Automatic Analysis of Concurrent Reactive Software},
	Year = {1997}}

@inproceedings{DBLP:conf/ecoop/2004,
	Author = {Robert DeLine and Manuel F{\"a}hndrich},
	Bibsource = {DBLP, http://dblp.uni-trier.de},
	Booktitle = {ECOOP},
	Editor = {Martin Odersky},
	Isbn = {3-540-22159-X},
	Pages = {465--490},
	Publisher = {Springer},
	Series = {Lecture Notes in Computer Science},
	Title = {Typestates for Objects},
	Volume = {3086},
	Year = {2004}}

@inproceedings{964023,
	Author = {Cormac Flanagan and Stephen N Freund},
	Booktitle = {Proceedings of the 31st ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
	Doi = {http://doi.acm.org/10.1145/964001.964023},
	Isbn = {1-58113-729-X},
	Location = {Venice, Italy},
	Pages = {256--267},
	Publisher = {ACM Press},
	Title = {Atomizer: a dynamic atomicity checker for multithreaded programs},
	Year = {2004}}

@article{265927,
	Author = {Stefan Savage and Michael Burrows and Greg Nelson and Patrick Sobalvarro and Thomas Anderson},
	Doi = {http://doi.acm.org/10.1145/265924.265927},
	Issn = {0734-2071},
	Journal = {ACM Trans. Comput. Syst.},
	Number = {4},
	Pages = {391--411},
	Publisher = {ACM Press},
	Title = {Eraser: a dynamic data race detector for multithreaded programs},
	Volume = {15},
	Year = {1997}}

@inproceedings{havelund00using,
	Author = {Klaus Havelund},
	Booktitle = {{SPIN} Model Checking and Software Verification},
	Editor = {Kalus Havelund and John Penix and Willem Visser},
	Pages = {245--264},
	Publisher = {{Springer}},
	Series = {Lecture Notes in Computer Science},
	Title = {Using Runtime Analysis to Guide Model Checking of Java Programs},
	Url = {citeseer.ist.psu.edu/havelund00using.html},
	Volume = {1885},
	Year = {2000}}

@inproceedings{512538,
	Author = {Manuvir Das and Sorin Lerner and Mark Seigle},
	Booktitle = {Proceedings of the ACM SIGPLAN 2002 Conference on Programming language design and implementation},
	Doi = {http://doi.acm.org/10.1145/512529.512538},
	Isbn = {1-58113-463-0},
	Location = {Berlin, Germany},
	Pages = {57--68},
	Publisher = {ACM Press},
	Title = {{ESP}: path-sensitive program verification in polynomial time},
	Year = {2002}}

@inproceedings{349332,
	Author = {Manuel F{\"a}hndrich and Jakob Rehof and Manuvir Das},
	Booktitle = {Proceedings of the ACM SIGPLAN 2000 Conference on Programming language design and implementation},
	Doi = {http://doi.acm.org/10.1145/349299.349332},
	Isbn = {1-58113-199-2},
	Location = {Vancouver, British Columbia, Canada},
	Pages = {253--263},
	Publisher = {ACM Press},
	Title = {Scalable context-sensitive flow analysis using instantiation constraints},
	Year = {2000}}

@inproceedings{776863,
	Author = {Sagar Chaki and Edmund Clarke and Alex Groce and Somesh Jha and Helmut Veith},
	Booktitle = {Proceedings of the 25th international conference on Software engineering},
	Isbn = {0-7695-1877-X},
	Location = {Portland, Oregon},
	Pages = {385--395},
	Publisher = {IEEE Computer Society},
	Title = {Modular verification of software components in {C}},
	Year = {2003}}

@inproceedings{786967,
	Author = {Willem Visser and Klaus Havelund and Guillaume Brat and SeungJoon Park},
	Booktitle = {Proceedings of the The Fifteenth IEEE International Conference on Automated Software Engineering (ASE'00)},
	Isbn = {0-7695-0710-7},
	Pages = {3},
	Publisher = {IEEE Computer Society},
	Title = {Model Checking Programs},
	Year = {2000}}

@inproceedings{Robby-etal:TACAS2004,
	Author = {Robby and Edwin Rodr\'{i}guez and Matthew Dwyer and John Hatcliff},
	Bibsource = {DBLP, http://dblp.uni-trier.de},
	Booktitle = {Tools and Algorithms for the Construction and Analysis of Systems, 10th International Conference, TACAS 2004},
	Editor = {Kurt Jensen and Andreas Podelski},
	Isbn = {3-540-21299-X},
	Pages = {404--420},
	Publisher = {Springer},
	Series = {Lecture Notes in Computer Science},
	Title = {Checking Strong Specifications Using an Extensible Software Model Checking Framework},
	Volume = {2988},
	Year = {2004}}

@inproceedings{corbett00language,
	Author = {James C. Corbett and Matthew B. Dwyer and John Hatcliff and Robby},
	Booktitle = {{SPIN}},
	Pages = {205-223},
	Title = {A Language Framework for Expressing Checkable Properties of Dynamic Software},
	Url = {citeseer.ist.psu.edu/corbett00language.html},
	Year = {2000}}

@inproceedings{ball00bebop,
	Author = {Thomas Ball and Sriram K. Rajamani},
	Booktitle = {{SPIN}},
	Pages = {113--130},
	Title = {Bebop: A Symbolic Model Checker for {B}oolean Programs},
	Url = {citeseer.ist.psu.edu/ball00bebop.html},
	Year = {2000}}

@inproceedings{ball01automatic,
	Author = {Thomas Ball and Rupak Majumdar and Todd D. Millstein and Sriram K. Rajamani},
	Booktitle = {{SIGPLAN} Conference on Programming Language Design and Implementation},
	Pages = {203-213},
	Title = {Automatic Predicate Abstraction of {C} Programs},
	Url = {citeseer.ist.psu.edu/ball01automatic.html},
	Year = {2001}}

@inproceedings{yang04using,
	Author = {Junfeng Yang and Paul Twohey and Dawson Engler and Madanlal Musuvathi},
	Booktitle = {Proceedings of the Sixth Symposium on Operating Systems Design and Implementation},
	Title = {Using model checking to find serious file system errors},
	Year = {2004}}

@inproceedings{musuvathi:osdi:cmc,
	Author = {Madanlal Musuvathi and David Park and Andy Chou and Dawson R. Engler and David L. Dill},
	Booktitle = {Proceedings of the Fifth Symposium on Operating Systems Design and Implementation},
	Month = {December},
	Title = {{CMC: A Pragmatic Approach to Model Checking Real Code}},
	Url = {citeseer.ist.psu.edu/musuvathi02cmc.html},
	Year = {2002}}

@inproceedings{503274,
	Author = {Thomas Ball and Sriram K. Rajamani},
	Booktitle = {Proceedings of the 29th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
	Doi = {http://doi.acm.org/10.1145/503272.503274},
	Isbn = {1-58113-450-9},
	Location = {Portland, Oregon},
	Pages = {1--3},
	Publisher = {ACM Press},
	Title = {The {SLAM} project: debugging system software via static analysis},
	Year = {2002}}

@inproceedings{henzinger03software,
	Author = {T. Henzinger and R. Jhala and R. Majumdar and G. Sutre},
	Booktitle = {Proceedings of Tenth International Workshop on Model Checking of Software ({SPIN})},
	Pages = {235--239},
	Publisher = {Springer-Verlag},
	Series = {Lecture Notes in Computer Science},
	Title = {Software verification with {BLAST}},
	Url = {citeseer.ist.psu.edu/henzinger03software.html},
	Volume = {2988},
	Year = {2003}}

@inproceedings{ckl2004,
	Author = {Clarke, Edmund and Kroening, Daniel and Lerda, Flavio},
	Booktitle = {Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2004)},
	Editor = {Kurt Jensen and Andreas Podelski},
	Isbn = {3-540-21299-X},
	Pages = {168--176},
	Publisher = {Springer},
	Series = {Lecture Notes in Computer Science},
	Title = {A Tool for Checking {ANSI-C} Programs},
	Volume = {2988},
	Year = {2004}}

@inproceedings{512558,
	Author = {Cormac Flanagan and K. Rustan M. Leino and Mark Lillibridge and Greg Nelson and James B. Saxe and Raymie Stata},
	Booktitle = {Proceedings of the ACM SIGPLAN 2002 Conference on Programming language design and implementation},
	Doi = {http://doi.acm.org/10.1145/512529.512558},
	Isbn = {1-58113-463-0},
	Location = {Berlin, Germany},
	Pages = {234--245},
	Publisher = {ACM Press},
	Title = {Extended static checking for {J}ava},
	Year = {2002}}

@inproceedings{tkachuk03automated,
	Author = {Oksana Tkachuk and Matthew B. Dwyer and Corina
                  S. P{\u{a}}s{\u{a}}reanu},
	Booktitle = {Proceedings of the 18th {IEEE} International Conference on Automated Software Engineering},
	Month = {October},
	Title = {Automated Environment Generation for Software Model Checking},
	Year = {2003}}

@inproceedings{hovemeyer04finding,
	Author = {David Hovemeyer and William Pugh},
	Booktitle = {Proceedings of the ACM SIGPLAN 2004 Conference on Programming language design and implementation},
	Month = {December},
	Note = {To appear.},
	Title = {Finding Bugs is Easy},
	Year = {2004}}

@inproceedings{rutar04comparison,
	Author = {Nick Rutar and Christian B. Almazan and Jeffrey S. Foster},
	Booktitle = {Proceedings of the 15th IEEE International Symposium on Software Reliability Engineering (ISSRE'04)},
	Month = {November},
	Note = {To appear.},
	Title = {A Comparison of Bug Finding Tools for {J}ava},
	Year = {2004}}

@inproceedings{1007543,
	Author = {Cormac Flanagan and Stephen N. Freund and Shaz Qadeer},
	Booktitle = {Proceedings of the 2004 ACM SIGSOFT international symposium on Software testing and analysis},
	Doi = {http://doi.acm.org/10.1145/1007512.1007543},
	Isbn = {1-58113-820-2},
	Location = {Boston, Massachusetts, USA},
	Pages = {221--231},
	Publisher = {ACM Press},
	Title = {Exploiting purity for atomicity},
	Year = {2004}}

@inproceedings{wang03runtimeRV,
	Author = {Liqiang Wang and Scott D. Stoller},
	Booktitle = {Proc.\ Third Workshop on Runtime Verification (RV)},
	Month = {July},
	Publisher = {Elsevier},
	Series = {Electronic Notes in Theoretical Computer Science},
	Title = {Run-Time Analysis for Atomicity},
	Volume = {89(2)},
	Year = {2003}}

@inproceedings{781169,
	Author = {Cormac Flanagan and Shaz Qadeer},
	Booktitle = {Proceedings of the ACM SIGPLAN 2003 conference on Programming language design and implementation},
	Doi = {http://doi.acm.org/10.1145/781131.781169},
	Isbn = {1-58113-662-5},
	Location = {San Diego, California, USA},
	Pages = {338--349},
	Publisher = {ACM Press},
	Title = {A type and effect system for atomicity},
	Year = {2003}}

@techreport{johnson78lint,
	Author = {S. C. Johnson},
	Institution = {Bell Laboratories},
	Number = {65},
	Title = {Lint, a {C} program checker},
	Year = {1978}}

@inproceedings{195297,
	Author = {David Evans and John Guttag and James Horning and Yang Meng Tan},
	Booktitle = {Proceedings of the 2nd ACM SIGSOFT symposium on Foundations of software engineering},
	Doi = {http://doi.acm.org/10.1145/193173.195297},
	Isbn = {0-89791-691-3},
	Location = {New Orleans, Louisiana, United States},
	Pages = {87--96},
	Publisher = {ACM Press},
	Title = {{LCLint}: a tool for using specifications to check code},
	Year = {1994}}

@inproceedings{231389,
	Author = {David Evans},
	Booktitle = {Proceedings of the ACM SIGPLAN 1996 conference on Programming language design and implementation},
	Doi = {http://doi.acm.org/10.1145/231379.231389},
	Isbn = {0-89791-795-2},
	Location = {Philadelphia, Pennsylvania, United States},
	Pages = {44--53},
	Publisher = {ACM Press},
	Title = {Static detection of dynamic memory errors},
	Year = {1996}}

@inproceedings{512560,
	Author = {Jong-Deok Choi and Keunwoo Lee and Alexey Loginov and Robert O'Callahan and Vivek Sarkar and Manu Sridharan},
	Booktitle = {Proceedings of the ACM SIGPLAN 2002 Conference on Programming language design and implementation},
	Doi = {http://doi.acm.org/10.1145/512529.512560},
	Isbn = {1-58113-463-0},
	Location = {Berlin, Germany},
	Pages = {258--269},
	Publisher = {ACM Press},
	Title = {Efficient and precise datarace detection for multithreaded object-oriented programs},
	Year = {2002}}

@inproceedings{302467,
	Author = {Michael D. Ernst and Jake Cockrell and William G. Griswold and David Notkin},
	Booktitle = {Proceedings of the 21st international conference on Software engineering},
	Isbn = {1-58113-074-0},
	Location = {Los Angeles, California, United States},
	Pages = {213--224},
	Publisher = {IEEE Computer Society Press},
	Title = {Dynamically discovering likely program invariants to support program evolution},
	Year = {1999}}

@article{karaorman99jcontractor,
	Author = {Murat Karaorman and Urs H{\"o}lzle and John Bruno},
	Journal = {Lecture Notes in Computer Science},
	Pages = {175--??},
	Title = {{jContractor}: {A} Reflective {Java} Library to Support Design by Contract},
	Url = {citeseer.ist.psu.edu/karaorman98jcontractor.html},
	Volume = {1616},
	Year = {1999}}

@inproceedings{zitser04testing,
	Author = {Misha Zitser and Richard Lippmann and Tim Leek},
	Booktitle = {Proceedings of the 12th ACM SIGSOFT International Symposium on the Foundations of Software Engineering},
	Pages = {97--106},
	Publisher = {ACM Press},
	Title = {Testing Static Analysis Tools using Exploitable Buffer Overflows from Open Source Code},
	Year = {2004}}

@inproceedings{775928,
	Author = {Edmund Clarke and Daniel Kroening and Karen Yorav},
	Booktitle = {Proceedings of the 40th conference on Design automation},
	Doi = {http://doi.acm.org/10.1145/775832.775928},
	Isbn = {1-58113-688-9},
	Location = {Anaheim, CA, USA},
	Pages = {368--371},
	Publisher = {ACM Press},
	Title = {Behavioral consistency of C and verilog programs using bounded model checking},
	Year = {2003}}
